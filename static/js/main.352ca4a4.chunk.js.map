{"version":3,"sources":["context/index.tsx","shared/ui/Button.tsx","shared/lib/numberToFixed.ts","components/ButtonsGroup/OperationButton.tsx","components/ButtonsGroup/NumberButton.tsx","components/ButtonsGroup/ButtonsGroup.tsx","components/Output/OutputScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["operations","left","right","CalculatorContext","React","createContext","undefined","displayName","AppProvider","children","useState","previousOperand","setPreviousOperand","currentOperand","setCurrentOperand","currentOperation","setCurrentOperation","resetFlag","setResetFlag","value","useMemo","Provider","useCalculator","context","useContext","Error","Button","styled","button","numberToFixed","num","digitsAfterPoint","parseFloat","toFixed","OperationButton","operation","onClick","newValue","newValueToFixed","toString","NumberButton","digit","AllClearButton","ButtonsGroup","prev","slice","Math","sqrt","includes","OutputScreen","useEffect","isNaN","Output","role","PreviousOperand","CurrentOperand","div","CalculatorContainer","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352ca4a4.chunk.js","sourcesContent":["import React, {Dispatch, SetStateAction, useState} from \"react\";\r\n\r\ntype OperationFn = (left: number, right: number) => number\r\n\r\nconst createOperations = <OperationsType extends Record<string, OperationFn>>(\r\n  opts: OperationsType,\r\n) => opts\r\nexport const operations = createOperations({\r\n  '+': (left, right) => left + right,\r\n  '-': (left, right) => left - right,\r\n  '*': (left, right) => left * right,\r\n  '/': (left, right) => left / right,\r\n  '^': (left, right) => left ** right\r\n});\r\n\r\nexport type OperationsParams = keyof typeof operations;\r\n\r\ntype CalculatorContextType = {\r\n  previousOperand: string | undefined\r\n  setPreviousOperand: Dispatch<SetStateAction<string | undefined>>\r\n  currentOperand: string | undefined\r\n  setCurrentOperand: Dispatch<SetStateAction<string | undefined>>\r\n  currentOperation: keyof typeof operations | undefined\r\n  setCurrentOperation: Dispatch<SetStateAction<keyof typeof operations | undefined>>\r\n  resetFlag: boolean\r\n  setResetFlag: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nconst CalculatorContext = React.createContext<CalculatorContextType | undefined>(undefined)\r\nCalculatorContext.displayName = 'CalculatorContext';\r\n\r\nconst AppProvider:React.FC = ({children}) => {\r\n\r\n  const [previousOperand, setPreviousOperand] = useState<string | undefined>();\r\n  const [currentOperand, setCurrentOperand] = useState<string | undefined>();\r\n  const [currentOperation, setCurrentOperation] = useState<keyof typeof operations | undefined>();\r\n  const [resetFlag, setResetFlag] = useState(false);\r\n\r\n  const value = React.useMemo(() => ({\r\n    previousOperand,\r\n    setPreviousOperand,\r\n    currentOperand,\r\n    setCurrentOperand,\r\n    currentOperation,\r\n    setCurrentOperation,\r\n    resetFlag,\r\n    setResetFlag,\r\n  }), [\r\n    previousOperand,\r\n    setPreviousOperand,\r\n    currentOperand,\r\n    setCurrentOperand,\r\n    currentOperation,\r\n    setCurrentOperation,\r\n    resetFlag,\r\n    setResetFlag,\r\n  ])\r\n\r\n  return (\r\n        <CalculatorContext.Provider value={value}>{children}</CalculatorContext.Provider>\r\n  )\r\n}\r\n\r\nconst useCalculator = () => {\r\n  const context = React.useContext(CalculatorContext)\r\n  if (context === undefined) {\r\n    throw new Error(`useCalculator must be used within a CalculatorProvider`)\r\n  }\r\n  return context\r\n}\r\n\r\nexport {AppProvider, useCalculator}","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n   border: 1px solid white;\r\n   font-size: 2rem;\r\n   outline: 0;\r\n   background-color: rgba(255, 255, 255, .75);\r\n   cursor: pointer;\r\n   \r\n   &:hover {\r\n     background-color: rgba(255, 255, 255, .9)\r\n   }\r\n`","export const numberToFixed = (num: number, digitsAfterPoint: number): number => {\r\n  return +parseFloat((num).toFixed(digitsAfterPoint))\r\n}","import React from \"react\";\r\nimport {operations, OperationsParams, useCalculator} from \"../../context\";\r\nimport {Button} from \"../../shared/ui/Button\";\r\nimport {numberToFixed} from \"../../shared/lib/numberToFixed\";\r\n\r\nexport const OperationButton = ({operation}: {operation: OperationsParams}) => {\r\n\r\n  const {\r\n    previousOperand,\r\n    setPreviousOperand,\r\n    currentOperand,\r\n    setCurrentOperand,\r\n    currentOperation,\r\n    setCurrentOperation,\r\n  } = useCalculator();\r\n\r\n  const onOperationClickHandler = () => {\r\n    if (currentOperation && previousOperand && currentOperand) {\r\n      const newValue = operations[currentOperation](+previousOperand, +currentOperand);\r\n      const newValueToFixed = numberToFixed(newValue, 5);\r\n      setPreviousOperand(newValueToFixed.toString())\r\n      setCurrentOperation(operation);\r\n      setCurrentOperand(undefined)\r\n      return;\r\n    }\r\n\r\n    if (currentOperation && previousOperand) {\r\n      setCurrentOperation(operation)\r\n      return\r\n    }\r\n    setCurrentOperation(operation)\r\n    setPreviousOperand(currentOperand)\r\n    setCurrentOperand(undefined)\r\n  }\r\n\r\n  return (\r\n    <Button onClick={onOperationClickHandler}>{operation}</Button>\r\n  )\r\n}","import {Button} from \"../../shared/ui/Button\";\r\nimport React from \"react\";\r\nimport {useCalculator} from \"../../context\";\r\n\r\nexport const NumberButton = ({digit}: {digit: number}) => {\r\n  const {setCurrentOperand, resetFlag, setResetFlag} = useCalculator();\r\n\r\n  const onNumberClickHandler = () => {\r\n    setCurrentOperand((num) => {\r\n        return (num !== undefined && num !== '0' && !resetFlag) ? `${num}${digit}` : digit.toString()\r\n      }\r\n    )\r\n    setResetFlag(false)\r\n  }\r\n\r\n  return (\r\n    <Button onClick={onNumberClickHandler}>{digit}</Button>\r\n  )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {operations, useCalculator} from \"../../context\";\r\nimport {Button} from \"../../shared/ui/Button\";\r\nimport {OperationButton} from \"./OperationButton\";\r\nimport {NumberButton} from \"./NumberButton\";\r\nimport {numberToFixed} from \"../../shared/lib/numberToFixed\";\r\n\r\nconst ButtonsGroup = () => {\r\n\r\n  const {\r\n    previousOperand,\r\n    setPreviousOperand,\r\n    currentOperand,\r\n    setCurrentOperand,\r\n    currentOperation,\r\n    setCurrentOperation,\r\n    setResetFlag,\r\n  } = useCalculator();\r\n\r\n  const onEqualClick = () => {\r\n    if (!currentOperation || previousOperand === undefined || currentOperand === undefined) return\r\n    const newValue = operations[currentOperation](+previousOperand, +currentOperand);\r\n    const newValueToFixed = numberToFixed(newValue, 5);\r\n    setCurrentOperand(newValueToFixed.toString())\r\n    setCurrentOperation(undefined);\r\n    setPreviousOperand(undefined);\r\n    setResetFlag(true);\r\n  }\r\n\r\n  const onAllClearClick = () => {\r\n    setPreviousOperand(undefined);\r\n    setCurrentOperation(undefined);\r\n    setCurrentOperand('0');\r\n  }\r\n\r\n  const onRootClick = () => {\r\n    setCurrentOperand((num) => {\r\n      if (num === undefined) return;\r\n      const newValue = Math.sqrt(+num)\r\n      const newValueToFixed = numberToFixed(newValue, 5);\r\n      return newValueToFixed.toString()\r\n    })\r\n  }\r\n\r\n  const onDeleteClick = () => {\r\n    setCurrentOperand((prev) => {\r\n      if (prev === undefined) return\r\n      return prev.toString().slice(0, -1)\r\n    })\r\n  }\r\n\r\n  const onPlusMinusClick = () => {\r\n    setCurrentOperand((prev) => {\r\n      if (prev === undefined) return;\r\n      return (-prev).toString()\r\n    })\r\n  }\r\n\r\n  const onPointClick = () => {\r\n    if (currentOperand?.includes('.')) return\r\n    setCurrentOperand((prev) => {\r\n      if (prev === undefined) return '0.'\r\n      return `${prev}.`\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onPlusMinusClick}>±</Button>\r\n      <Button onClick={onDeleteClick}>DEL</Button>\r\n      <OperationButton operation={\"/\"} />\r\n      <Button onClick={onRootClick}>√</Button>\r\n      <NumberButton digit={1} />\r\n      <NumberButton digit={2} />\r\n      <NumberButton digit={3} />\r\n      <OperationButton operation={\"*\"} />\r\n      <NumberButton digit={4} />\r\n      <NumberButton digit={5} />\r\n      <NumberButton digit={6} />\r\n      <OperationButton operation={\"+\"} />\r\n      <NumberButton digit={7} />\r\n      <NumberButton digit={8} />\r\n      <NumberButton digit={9} />\r\n      <OperationButton operation={\"-\"} />\r\n      <Button onClick={onPointClick}>.</Button>\r\n      <NumberButton digit={0} />\r\n      <OperationButton operation={\"^\"} />\r\n      <Button onClick={onEqualClick}>=</Button>\r\n      <AllClearButton onClick={onAllClearClick}>AC</AllClearButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst AllClearButton = styled(Button)`\r\n  grid-column: 1 / -1;\r\n`\r\n\r\n\r\n\r\nexport default ButtonsGroup;","import React, {useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useCalculator} from \"../../context\";\r\nimport {numberToFixed} from \"../../shared/lib/numberToFixed\";\r\n\r\nexport const OutputScreen = () => {\r\n\r\n  const {\r\n    previousOperand,\r\n    setPreviousOperand,\r\n    currentOperand,\r\n    currentOperation,\r\n    setCurrentOperation,\r\n    setResetFlag,\r\n  } = useCalculator();\r\n\r\n  useEffect(() => {\r\n    if (currentOperand && isNaN(+currentOperand)) {\r\n      setResetFlag(true);\r\n      setPreviousOperand(undefined);\r\n      setCurrentOperation(undefined);\r\n    }\r\n  }, [previousOperand, currentOperand])\r\n\r\n  return (\r\n    <Output role=\"output\">\r\n      <PreviousOperand>\r\n        {previousOperand ? numberToFixed(+previousOperand, 5).toString() : ''}\r\n        {currentOperation ? currentOperation : ''}\r\n      </PreviousOperand>\r\n      <CurrentOperand>\r\n        {currentOperand ? currentOperand : ''}\r\n      </CurrentOperand>\r\n    </Output>\r\n  )\r\n}\r\n\r\nconst Output = styled.div`\r\n  background-color: rgba(0, 0, 0, .75);\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: space-around;\r\n  padding: 10px;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n`\r\n\r\nconst PreviousOperand = styled.div`\r\n  color: rgba(255, 255, 255, .75);\r\n  font-size: 1.5rem;\r\n`\r\n\r\nconst CurrentOperand = styled.div`\r\n  color: white; \r\n  font-size: 2.5rem;\r\n`","import React from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\nimport {AppProvider} from \"./context\";\nimport ButtonsGroup from \"./components/ButtonsGroup/ButtonsGroup\";\nimport {OutputScreen} from \"./components/Output/OutputScreen\";\n\nfunction App() {\n\n  return (\n    <AppProvider>\n    <div className=\"App\">\n      <CalculatorContainer>\n        <OutputScreen />\n        <ButtonsGroup />\n      </CalculatorContainer>\n    </div>\n    </AppProvider>\n  );\n}\n\nconst CalculatorContainer = styled.div`\n  margin-right: 50px;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  min-height: 100vh;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: minmax(120px, auto) repeat(6, 100px);\n`\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}